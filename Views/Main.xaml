<Window x:Class="ColdShineSoft.SmartFileCopier.Views.Main"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:ColdShineSoft.SmartFileCopier.Views"
		xmlns:viewModels="clr-namespace:ColdShineSoft.SmartFileCopier.ViewModels;assembly=ColdShineSoft.SmartFileCopier.ViewModels"
		xmlns:models="clr-namespace:ColdShineSoft.SmartFileCopier.Models;assembly=ColdShineSoft.SmartFileCopier.Models"
		xmlns:controls="clr-namespace:ColdShineSoft.SmartFileCopier.Controls;assembly=ColdShineSoft.SmartFileCopier.Controls"
		xmlns:hc="https://handyorg.github.io/handycontrol"
		xmlns:cal="http://www.caliburnproject.org"
		xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
		xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs" md:DialogServiceViews.IsRegistered="True"
		
	mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=viewModels:Main,IsDesignTimeCreatable=True}"
		Title="{Binding Title}">
	<DockPanel>
		<StackPanel DockPanel.Dock="Top" Margin="5">
			<DockPanel>
				<CheckBox IsChecked="{Binding Task.CompressTargetDirectory}" Content="{Binding Localization.CompressTargetDirectory}" cal:Message.Attach="[Unchecked]=[UncheckedCompressTargetDirectory]" />
				<controls:SaveFileSelector IsEnabled="{Binding Task.CompressTargetDirectory}" Path="{Binding Path=Task.CompressFilePath,Mode=TwoWay}" OpenButtonText="{Binding Localization.OpenFileDialog}" />
			</DockPanel>
			<controls:ErrorReminder Text="{Binding Task.DataErrorInfo.CompressFilePath}" />
			<WrapPanel IsEnabled="{Binding Task.CompressTargetDirectory}" Margin="0,5,0,0">
				<CheckBox IsChecked="{Binding Task.AddNowToCompressFileName}" Content="{Binding Localization.AddNowToCompressFileName}" />
				<WrapPanel IsEnabled="{Binding Task.AddNowToCompressFileName}">
					<TextBlock Text="{Binding Localization.NowFormatString}" VerticalAlignment="Center" />
					<TextBlock VerticalAlignment="Center">：</TextBlock>
					<TextBox Width="150" Text="{Binding Task.NowFormatString}" />
					<controls:ErrorReminder Text="{Binding Task.DataErrorInfo.NowFormatString}" />
				</WrapPanel>
			</WrapPanel>
		</StackPanel>
		<hc:SimplePanel DockPanel.Dock="Top">
			<ToolBar Padding="10,6">
				<Button Name="AddJob" hc:IconElement.Geometry="{StaticResource AddGeometry}" Margin="10,0,0,0" Content="{Binding Localization.AddJob}" />
				<Button Name="Run" hc:IconElement.Geometry="{StaticResource RightGeometry}" Margin="10,0,0,0" Content="{Binding Localization.Run}" />
				<controls:SaveFileSplitButton SelectedFilePath="{Binding OpeningFilePath}" cal:Message.Attach="[SaveFile]=[Save($this.SelectedFilePath)]" hc:IconElement.Geometry="{StaticResource SaveGeometry}" Margin="10,0,0,0" Content="{Binding Localization.Save}">
					<controls:SaveFileSplitButton.DropDownContent>
						<StackPanel>
							<controls:SaveFileMenuItem Header="{Binding Localization.SaveAs}" cal:Message.Attach="[SaveFile]=[SaveAs($this.SelectedFilePath)]" />
						</StackPanel>
					</controls:SaveFileSplitButton.DropDownContent>
				</controls:SaveFileSplitButton>
				<controls:OpenFileSplitButton DockPanel.Dock="Right" cal:Message.Attach="[OpenFile]=[Open($this.SelectedFilePath)]" hc:IconElement.Geometry="{StaticResource DownloadGeometry}" Margin="10,0,0,0" Content="{Binding Localization.Open}">
					<controls:OpenFileSplitButton.DropDownContent>
						<StackPanel>
							<TextBlock Text="{Binding Localization.RecentFiles}" Margin="5" />
							<ItemsControl ItemsSource="{Binding RecentFiles}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<MenuItem Header="{Binding}" cal:Message.Attach="Open($dataContext)" cal:Action.TargetWithoutContext="{Binding Path=DataContext,RelativeSource={RelativeSource AncestorType=Window}}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</StackPanel>
					</controls:OpenFileSplitButton.DropDownContent>
				</controls:OpenFileSplitButton>
			</ToolBar>
			<Menu HorizontalAlignment="Right" Margin="0,0,10,3" VerticalAlignment="Center">
				<MenuItem Header="{Binding Localization.Language}" ItemsSource="{Binding InstalledCultures}">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="MenuItem">
							<Setter Property="cal:Action.TargetWithoutContext" Value="{Binding Path=DataContext,RelativeSource={RelativeSource AncestorType=Window}}" />
							<Setter Property="cal:Message.Attach" Value="SelectLanguage($dataContext)" />
						</Style>
					</MenuItem.ItemContainerStyle>
					<MenuItem.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding NativeName}" />
						</DataTemplate>
					</MenuItem.ItemTemplate>
				</MenuItem>
			</Menu>
		</hc:SimplePanel>
		<controls:ErrorReminder DockPanel.Dock="Top" Text="{Binding Task.DataErrorInfo.Job}" />
		<controls:TabControl ItemsSource="{Binding Task.Jobs}" SelectedItem="{Binding SelectedJob}" IsFocus="{Binding UpdateJobBinding}" ShowCloseButton="True">
			<controls:TabControl.ItemTemplate>
				<DataTemplate>
					<TextBlock Text="{Binding Name}" />
				</DataTemplate>
			</controls:TabControl.ItemTemplate>
			<controls:TabControl.ContentTemplate>
				<DataTemplate>
					<DockPanel>
						<StackPanel DockPanel.Dock="Top" Margin="0,5,5,0">
							<StackPanel.Resources>
								<Style TargetType="DockPanel">
									<Setter Property="Margin" Value="0,5,0,0" />
								</Style>
								<Style TargetType="Label">
									<Setter Property="DockPanel.Dock" Value="Left" />
									<Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext}" />
									<Setter Property="Width" Value="180" />
									<Setter Property="HorizontalContentAlignment" Value="Right" />
									<Setter Property="VerticalContentAlignment" Value="Center" />
								</Style>
							</StackPanel.Resources>
							<DockPanel>
								<Label Content="{c:Binding Localization.Name+Colon}" />
								<hc:TextBox Text="{Binding Name}" />
							</DockPanel>
							<controls:ErrorReminder Text="{Binding DataErrorInfo.Name}" />
							<DockPanel>
								<Label Content="{c:Binding Localization.SourceDirectory+Colon}" />
								<controls:DirectorySelector Path="{Binding SourceDirectoryPath}" OpenButtonText="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.OpenFileDialog}" />
							</DockPanel>
							<controls:ErrorReminder Text="{Binding DataErrorInfo.SourceDirectoryPath}" />
							<DockPanel>
								<Label>
									<Label.Content>
										<CheckBox IsChecked="{Binding Path=DataContext.SpecifyTargetDirectory,RelativeSource={RelativeSource AncestorType=DockPanel}}" IsEnabled="{Binding Path=DataContext.Task.CompressTargetDirectory,RelativeSource={RelativeSource AncestorType=Window}}" Content="{c:Binding Localization.SpecifyTargetDirectory+Colon}" />
									</Label.Content>
								</Label>
								<Label Content="{Binding Path=Localization.SpecifyTargetDirectoryDescription}" Width="Auto" HorizontalAlignment="Left" />
							</DockPanel>
							<DockPanel Visibility="{c:Binding SpecifyTargetDirectory}">
								<Label Content="{c:Binding Localization.TargetDirectory+Colon}" />
								<controls:DirectorySelector Path="{Binding TargetDirectoryPath}" OpenButtonText="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.OpenFileDialog}" />
							</DockPanel>
							<controls:ErrorReminder Text="{Binding DataErrorInfo.TargetDirectoryPath}" />
							<DockPanel>
								<Label Content="{c:Binding Localization.ConditionDesignMode+Colon}" />
								<ItemsControl ItemsSource="{Binding Path=DataContext.ConditionModes,RelativeSource={RelativeSource AncestorType=Window}}" VerticalAlignment="Center">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<WrapPanel />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<RadioButton Tag="{Binding Path=DataContext.ConditionMode,RelativeSource={RelativeSource AncestorType=ItemsControl}}" IsChecked="{c:Binding 'DataContext==Tag',RelativeSource={RelativeSource Mode=Self}}" cal:Message.Attach="[Checked]=[SetConditionMode($dataContext)]" GroupName="ConditionMode" Margin="0,0,20,0">
												<RadioButton.Content>
													<controls:GetDictionaryValue Dictionary="{Binding Path=DataContext.Localization.ConditionMode,RelativeSource={RelativeSource AncestorType=Window}}" Key="{Binding}" />
												</RadioButton.Content>
											</RadioButton>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DockPanel>
						</StackPanel>
						<hc:SimplePanel>
							<!-- 如果不设置FalseToVisibility，可能会出现看不到表头行的情况 -->
							<DockPanel Visibility="{c:Binding 'ConditionMode==models:ConditionMode.Designer', FalseToVisibility=Hidden}">
								<WrapPanel DockPanel.Dock="Top">
									<Button cal:Message.Attach="[Click]=[AddCondition($dataContext)]" hc:IconElement.Geometry="{StaticResource AddGeometry}" Margin="5,10,0,0" Content="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.AddCondition}"  HorizontalAlignment="Left" />
									<controls:ErrorReminder Text="{Binding DataErrorInfo.Condition}" />
								</WrapPanel>
								<DataGrid ItemsSource="{Binding Conditions}" AutoGenerateColumns="False">
									<DataGrid.Columns>
										<DataGridTemplateColumn>
											<DataGridTemplateColumn.Header>
												<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.Connective}" />
											</DataGridTemplateColumn.Header>
											<DataGridTemplateColumn.CellTemplate>
												<DataTemplate>
													<hc:ComboBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Connectives}" SelectedItem="{Binding Path=Connective,UpdateSourceTrigger=PropertyChanged}" Tag="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},Path=DataContext}" Visibility="{c:Binding 'Tag.Conditions[0]!=DataContext',RelativeSource={RelativeSource Mode=Self}}" MinWidth="75">
														<hc:ComboBox.ItemTemplate>
															<DataTemplate>
																<controls:GetDictionaryValue Dictionary="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.LogicalConnective}" Key="{Binding}" />
							            					</DataTemplate>
														</hc:ComboBox.ItemTemplate>
													</hc:ComboBox>
												</DataTemplate>
											</DataGridTemplateColumn.CellTemplate>
										</DataGridTemplateColumn>
										<DataGridTemplateColumn>
											<DataGridTemplateColumn.Header>
												<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.LeftBracket}" />
											</DataGridTemplateColumn.Header>
											<DataGridTemplateColumn.CellTemplate>
												<DataTemplate>
													<controls:ToggleBoolean Value="{Binding Path=LeftBracket,UpdateSourceTrigger=PropertyChanged}" TrueContent="(" />
												</DataTemplate>
											</DataGridTemplateColumn.CellTemplate>
										</DataGridTemplateColumn>
										<DataGridTemplateColumn>
											<DataGridTemplateColumn.Header>
												<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.Property}" />
											</DataGridTemplateColumn.Header>
											<DataGridTemplateColumn.CellTemplate>
												<DataTemplate>
													<hc:ComboBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Properties}" SelectedItem="{Binding Path=Property,UpdateSourceTrigger=PropertyChanged}" MinWidth="150">
														<hc:ComboBox.ItemTemplate>
															<DataTemplate>
																<controls:GetDictionaryValue Dictionary="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.Properties}" Key="{Binding Name}" />
															</DataTemplate>
														</hc:ComboBox.ItemTemplate>
													</hc:ComboBox>
												</DataTemplate>
											</DataGridTemplateColumn.CellTemplate>
										</DataGridTemplateColumn>
										<DataGridTemplateColumn>
											<DataGridTemplateColumn.Header>
												<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.Operator}" />
											</DataGridTemplateColumn.Header>
											<DataGridTemplateColumn.CellTemplate>
												<DataTemplate>
													<hc:ComboBox ItemsSource="{Binding Property.AllowOperators}" SelectedItem="{Binding Path=Operator,UpdateSourceTrigger=PropertyChanged}">
														<hc:ComboBox.ItemTemplate>
															<DataTemplate>
																<controls:GetDictionaryValue Dictionary="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.Operators}" Key="{Binding Name}" />
															</DataTemplate>
														</hc:ComboBox.ItemTemplate>
													</hc:ComboBox>
												</DataTemplate>
											</DataGridTemplateColumn.CellTemplate>
										</DataGridTemplateColumn>
										<DataGridTemplateColumn>
											<DataGridTemplateColumn.Header>
												<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.Value}" />
											</DataGridTemplateColumn.Header>
											<DataGridTemplateColumn.CellTemplate>
												<DataTemplate>
													<!--<TextBlock Text="{Binding ValueType}" />-->
													<ContentControl>
														<ContentControl.Style>
															<Style TargetType="ContentControl">
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ValueType}" Value="{x:Static models:PropertyTypes.String}">
																		<Setter Property="ContentTemplate">
																			<Setter.Value>
																				<DataTemplate>
																					<TextBox Text="{Binding Path=DataContext.StringValue,RelativeSource={RelativeSource AncestorType=ContentControl}}" MinWidth="100" />
																				</DataTemplate>
																			</Setter.Value>
																		</Setter>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ValueType}" Value="{x:Static models:PropertyTypes.Int64}">
																		<Setter Property="ContentTemplate">
																			<Setter.Value>
																				<DataTemplate>
																					<hc:NumericUpDown Value="{Binding Path=DataContext.LongValue,RelativeSource={RelativeSource AncestorType=ContentControl}}" MinWidth="100" />
																				</DataTemplate>
																			</Setter.Value>
																		</Setter>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ValueType}" Value="{x:Static models:PropertyTypes.DateTime}">
																		<Setter Property="ContentTemplate">
																			<Setter.Value>
																				<DataTemplate>
																					<hc:DateTimePicker SelectedDateTime="{Binding Path=DataContext.DateTimeValue,RelativeSource={RelativeSource AncestorType=ContentControl}}" />
																				</DataTemplate>
																			</Setter.Value>
																		</Setter>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</ContentControl.Style>
													</ContentControl>
												</DataTemplate>
											</DataGridTemplateColumn.CellTemplate>
										</DataGridTemplateColumn>
										<DataGridTemplateColumn>
											<DataGridTemplateColumn.Header>
												<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.RightBracket}" />
											</DataGridTemplateColumn.Header>
											<DataGridTemplateColumn.CellTemplate>
												<DataTemplate>
													<controls:ToggleBoolean Value="{Binding Path=RightBracket,UpdateSourceTrigger=PropertyChanged}" TrueContent=")" />
												</DataTemplate>
											</DataGridTemplateColumn.CellTemplate>
										</DataGridTemplateColumn>
										<DataGridTemplateColumn Width="*">
											<DataGridTemplateColumn.CellTemplate>
												<DataTemplate>
													<WrapPanel>
														<Button cal:Message.Attach="RemoveCondition($this.Tag,$this.DataContext)" Tag="{Binding Path=DataContext,RelativeSource={RelativeSource AncestorType=DataGrid}}" Style="{StaticResource ButtonIcon}" hc:IconElement.Geometry="{StaticResource DeleteGeometry}"/>
														<controls:ErrorReminder Text="{Binding DataErrorInfo.StringValue}" />
													</WrapPanel>
												</DataTemplate>
											</DataGridTemplateColumn.CellTemplate>
										</DataGridTemplateColumn>
									</DataGrid.Columns>
								</DataGrid>
							</DockPanel>
							<DockPanel Visibility="{c:Binding 'ConditionMode==models:ConditionMode.Expression'}" Margin="0,20,0,0">
								<WrapPanel DockPanel.Dock="Top">
									<TextBlock Foreground="Green">/* System.IO.FileInfo */ </TextBlock>
									<TextBlock>fileInfo=></TextBlock>
									<controls:ErrorReminder Text="{Binding DataErrorInfo.CustomExpression}" />
									<!--<TextBlock Foreground="Green"> //</TextBlock>
									<TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.Localization.ExpressionLimitation}" Foreground="Green" />-->
								</WrapPanel>
								<TextBox Text="{Binding CustomExpression}" AcceptsReturn="True" TextWrapping="Wrap" VerticalContentAlignment="Top" />
							</DockPanel>
						</hc:SimplePanel>
					</DockPanel>
				</DataTemplate>
			</controls:TabControl.ContentTemplate>
		</controls:TabControl>
	</DockPanel>
</Window>